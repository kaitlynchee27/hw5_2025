@import url('https://fonts.googleapis.com/css2?family=Poppins&display=swap');

/* Animate the logo with keyframes.  (Here is a keyframes reference.)
 It should start at a width of 25px and grow to 475px.  
 It should also start with an opacity of 0 and end with an opacity of 1.
  The animation should take 5 seconds and only happen when the page is 
  loaded. **You can complete this step later in the process - it won’t 
  affect the larger views.  */
@keyframes logoAnimation {
    0% {
    width: 25px;
    opacity: 0;
    }

    100% {
    width: 475px;
    opacity: 1;
    }
}

#logo {
    width: 25px; 
    opacity: 0; 
    animation: logoAnimation 5s forwards; 
}

/* Edit the body element to use the Poppins font (using Google fonts)
 with serif as a backup.  It should also use the image 
 “concrete_seamless.png” as a background-image with a backup color 
 of #f1f1f1. */

 body{
    font-family: "Poppins", "serif";
    background-image: url('concrete_seamless.png');
    background-color: #f1f1f1;
    background-repeat: repeat;
 }

 /* Edit the css for the header tag (all instances) to 
 use flex to match our example. */

 header{
    display: flex;
    flex-direction: column;
    align-items: center;
 }

 /* Edit the css for the nav_links class to use flex 
 to match our example. Do not modify the list items or 
 the links - modify the nav_links class to use flex. 
 */

.nav_links{
    display: flex;
    flex-direction: column;
    color: blue;
 }

   /* Style the links so that they have the same color 
 even after they have been visited. This is a 
 “challenge” problem. You should not give or receive
  help when completing it.
 */

 .nav_links a:visited{
    color: blue;
 }

 /* Identify the proper selector to style ONLY those 
 header elements that are direct children of a card class. 
  The required styling is the following: 
background: #288088,
solid 2px border using #45ADAD,
20px of padding on the top and the bottom, 
50px border-radius on the top left and right corners. 
 */

 .card >* header{
    background: #288088;
    border: solid 2px #45ADAD;
    padding: 20px 0;
    border-radius: 50px;
 }

/* Edit the css for the card class to match our example.
 Achieve this by using a flex-property to specify an 
 initial “size” of 450px.  You need to think about this
  from a “flex” perspective and realize that flex-direction
   will affect the size of the elements.  You can see that
    in the mobile view they all have the same width. 
 */

 .card{
    display: flex;
    size: 450px;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border-radius: 15px;
    text-align: center;
 }

 
 /* Edit the css for the pricing class to match our example.
  You should use flex and the cards should be centered both
   horizontally and vertically.
 */

 .pricing{
    display:flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    
 }   /* fix smth is so wrong */

 /* Style the images in the gallery class. These elements
  will have a solid 10px border with a color of #50C7C7,
   10px margin on all four sides and a width of 300px.   */

.gallery >* img{
    border: solid 10px #50C7C7;
    margin: 10px;
    width: 300px;
}

/* Edit the css for the gallery class to use flex to 
match our example. (You may want to look at the screen shots
 from 1200px and 1500px as well -  the changes are not from
  media queries, but from the use of flex.) */

